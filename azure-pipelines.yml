# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: npm cache clean --force
  displayName: 'Clean npm cache'

- script: npm install -g npm@latest
  displayName: 'Update npm'


- script: |
    npm install -g @angular/cli
    npm install -g gzipper
    npm install
  displayName: 'Install Angular CLI and Dependencies'

- script: |
     mkdir $(Build.ArtifactStagingDirectory)/dist-new
     

- script: |
    ng build --configuration=production && gzipper c $(System.DefaultWorkingDirectory)/dist/ --include js,css,html,ttf,woff2,woff,txt,svg,json,png,jpg,jpeg,gif,scss,eot,ico,xml,application/xml,application --output-file-format [filename].[ext] $(Build.ArtifactStagingDirectory)/dist-new/ --verbose
       
  displayName: 'Build Angular Application'

- script: |
   cd $(Build.ArtifactStagingDirectory)/dist
   ls -a
  displayName: "artifact directory content in dist"
- script: |   
   cd $(System.DefaultWorkingDirectory)/dist
   ls -a
  displayName: "default directory content in dist" 
- task: CopyFiles@2
  inputs:
    contents: 'dist/**'
    targetFolder: '$(Build.ArtifactStagingDirectory)/dist'
  displayName: 'Copy Files to Artifact Staging Directory'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
    ArtifactName: 'dist'
  displayName: 'Publish Build Artifacts' 



# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'dist'
#     Contents: '**/*.gz'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)/dist-new'
#   displayName: 'Copy Compressed Files to Target Directory'

- task: CopyFiles@2
  inputs:
    contents: 'dist/**'
    targetFolder: '$(Build.ArtifactStagingDirectory)/dist-new'
  displayName: 'Copy Files to Artifact Staging Directory'

- script: |   
   cd $(System.DefaultWorkingDirectory)/dist
   ls -a
  displayName: "default directory content in dist" 

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/dist-new'
    ArtifactName: 'compressed-dist'
  displayName: 'Publish Compressed Build Artifacts'